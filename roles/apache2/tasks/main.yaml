---
- name: Check if let's encrypt cert exist
  stat:
    path: /etc/letsencrypt/options-ssl-apache.conf
  register: stat_result

- name: Create Apache2 Config File
  template:
    src: "apache2.conf.j2"
    dest: "/etc/apache2/sites-available/nextcloud.conf"
  notify: "Restart Apache"

- name: Add external Domains to Config
  lineinfile:
    path: "/etc/apache2/sites-available/nextcloud.conf"
    regexp: "/ServerAlias {{ item }}(?!.*ServerAlias {{ item }})/s"
    insertafter: "#ExternalURLs"
    line: "        ServerAlias {{ item }}"
    state: present
  with_items: "{{ external_domains }}"
  notify: "Restart Apache"

- name: Create http2 Config File
  template:
    src: "http2.conf.j2"
    dest: "/etc/apache2/mods-available/http2.conf"
  notify: "Restart Apache"

- name: Copy Certificate
  template:
    src: cert.crt
    dest: /etc/ssl/certs/{{ inventory_hostname }}.crt
    owner: root
    mode: 0600

- name: Copy Certificate Key
  template:
    src: cert.key
    dest: /etc/ssl/private/{{ inventory_hostname }}.key
    owner: root
    mode: 0600

- name: Enable nextcloud Site
  shell: /usr/sbin/a2ensite nextcloud.conf
  notify: "Restart Apache"

- name: Disable default Site
  shell: /usr/sbin/a2ensite 000-default.conf
  notify: "Restart Apache"
  ignore_errors: yes

- name: Disabale modules
  shell: /usr/sbin/a2dismod {{ item }}
  with_items:
    - php{{ php_version }}
    - php{{ old_php_version }}
    - mpm_prefork
  notify: "Restart Apache"

- name: Disable old php-fpm
  shell: /usr/sbin/a2disconf {{ item }}
  with_items:
    - php{{ old_php_version }}-fpm
  notify: "Restart Apache"

- name: Enable php-fpm
  shell: /usr/sbin/a2enconf {{ item }}
  with_items:
    - php{{ php_version }}-fpm
  notify: "Restart Apache"

- name: Enable modules
  shell: /usr/sbin/a2enmod {{ item }}
  with_items:
    - headers
    - env
    - dir
    - mime
    - ssl
    - rewrite
    - proxy_fcgi
    - setenvif
    - mpm_event
    - http2
    - proxy
    - proxy_http
    - proxy_wstunnel
  notify: "Restart Apache"

- name: Set PHP.ini Settings
  lineinfile:
    path: /etc/php/{{ php_version }}/cli/php.ini
    regexp: '{{ item.line }}'
    insertafter: '{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ php_settings }}"
  notify: 
    - "Restart Apache"
    - "Restart PHP-FPM"
  
- name: Set PHP.ini Settings
  lineinfile:
    path: /etc/php/{{ php_version }}/apache2/php.ini
    regexp: '{{ item.line }}'
    insertafter: '{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ php_settings }}"
  notify: 
    - "Restart Apache"
    - "Restart PHP-FPM"

- name: Set PHP.ini Settings
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: '{{ item.line }}'
    insertafter: '{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ php_settings }}"
  notify: 
    - "Restart Apache"
    - "Restart PHP-FPM"

- name: Config opcache
  lineinfile:
    path: /etc/php/{{ php_version }}/apache2/php.ini
    regexp: '{{ item.line }}'
    #insertafter: '^{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ opcache }}"
  notify: "Restart Apache"

- name: Config opcache
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    regexp: '{{ item.line }}'
    #insertafter: '^{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ opcache }}"
  notify: "Restart PHP-FPM"

- name: Config opcache
  lineinfile:
    path: /etc/php/{{ php_version }}/cli/php.ini
    regexp: '{{ item.line }}'
    #insertafter: '^{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ opcache }}"
  notify: "Restart Apache"

- name: Config FPM
  lineinfile:
    path: /etc/php/{{ php_version }}/fpm/pool.d/www.conf
    regexp: '^{{ item.line }}'
    insertafter: '^{{ item.after }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ fpm }}"
  notify: "Restart PHP-FPM"

- name: Configure Redis
  lineinfile:
    path: /etc/redis/redis.conf
    regexp: '{{ item.line }}'
    line: '{{ item.value }}'
    state: present
  with_items: "{{ redis }}"
  notify: "Restart Redis"

- name: Add www-data to redis
  user:
    name: 'www-data'
    groups: redis
    append: yes
  notify: Restart Redis

- name: Get Lets encrypt certificate
  shell: "certbot renew --dry-run"
  ignore_errors: yes
  when: stat_result.stat.exists